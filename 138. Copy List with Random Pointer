https://leetcode.com/problems/copy-list-with-random-pointer/

Algorithm:
  - Insert a new node betweenexisting nodes
  - In first iteration assign next pointers in such a way that new node can sit between two existing node
  - start while loop again and now reassign the random pointers.

public Node copyRandomList(Node head) {
        Node curr=head;
        if(head==null){
            return head;
        }
        
        while(curr!=null){
            
            Node newNode=new Node(curr.val);
            newNode.next=curr.next;
            curr.next=newNode;
            curr=newNode.next;
        }

        curr=head;
        while(curr!=null){
            if(curr.random!=null)
                curr.next.random=curr.random.next;
            curr=curr.next.next;
        }
        curr=head;
        Node newHead = head.next;
        Node newCurr=newHead;
        
        while(curr!=null && newCurr!=null){
            curr.next=newCurr.next;
            curr=curr.next;
            if(curr!=null){
                newCurr.next=curr.next;
                newCurr=newCurr.next;
            }
            
        }
        return newHead;
    }
