https://leetcode.com/problems/search-in-rotated-sorted-array-ii/description/

Intution: 
  - Binary search apply on sorted array, if all the elemnets are unique then BS will be applied efficiently.
    since the array is having duplicates then the problem will be not be to find the right interval of array in order to apply BS

Algorithm:
  -Apply binary search on array
  -add one more condition when it stop to choose the right interval, then shrink the array.

Time complexity : O(logn) but if too many duplicates are there then O(n/2)

public boolean search(int[] nums, int target) {
        
        int l=0;
        int h=nums.length-1;

        while(l<=h){
            int mid=l+(h-l)/2;
            
            if(nums[mid]==target)
                return true;

            else if(nums[l]==nums[mid] && nums[h]==nums[mid]){
                l=l+1;
                h=h-1;
                
            }
            else if(nums[l]<=nums[mid]){
                
                if(nums[l]<=target && nums[mid]>=target){
                    h=mid-1;
                }else{
                    l=mid+1;
                }

            }else{
               if(nums[h]>=target && nums[mid]<=target){
                l=mid+1;
               }else{
                h=mid-1;
               }
            }
        }
    return false;
    }
    
