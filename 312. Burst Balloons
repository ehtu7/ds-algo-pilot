https://leetcode.com/problems/burst-balloons/description/

Intitution :
  based on MCM

Algorithm:
  - take an array of size n+2 and add 1 to both end value



class Solution {
    public int maxCoins(int[] nums) {
        int n=nums.length;
        int[] balloons = new int[n + 2];
        balloons[0] = balloons[n + 1] = 1;
        for (int i = 0; i < n; i++) {
            balloons[i + 1] = nums[i];
        }

        int[][] dp = new int[n + 2][n + 2];
        for (int i = 0; i < n + 2; i++) {
            for (int j = 0; j < n + 2; j++) {
                dp[i][j] = -1;
            }
        }
        
        return solve(balloons,1,n,dp);
        
    }

    public int solve(int[] balloons,int i,int j,int [][]dp){
        if(i>j){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        int res=0;
        int maxVal=Integer.MIN_VALUE;
        for(int k=i;k<=j;k++){
            
            res =solve(balloons,i,k-1,dp)
                    +solve(balloons,k+1,j,dp)
                    +balloons[i-1]*balloons[k]*balloons[j+1];
            
            maxVal=Math.max(res,maxVal);
            
        }
        dp[i][j]=maxVal;
    return dp[i][j];
    }
}
